#
# K2HDKC DBaaS based on Trove
#
# Copyright 2020 Yahoo Japan Corporation
#
# K2HDKC DBaaS is a Database as a Service compatible with Trove which
# is DBaaS for OpenStack.
# Using K2HR3 as backend and incorporating it into Trove to provide
# DBaaS functionality. K2HDKC, K2HR3, CHMPX and K2HASH are components
# provided as AntPickax.
#
# For the full copyright and license information, please view
# the license file that was distributed with this source code.
#
# AUTHOR:
# CREATE:
# REVISION:
#

diff --git a/devstack/plugin.sh b/devstack/plugin.sh
index 0a07e992..a94fce61 100644
--- a/devstack/plugin.sh
+++ b/devstack/plugin.sh
@@ -239,6 +239,7 @@ function configure_trove {
     iniset $TROVE_CONF DEFAULT trove_api_workers "$API_WORKERS"
     iniset $TROVE_CONF DEFAULT taskmanager_manager trove.taskmanager.manager.Manager
     iniset $TROVE_CONF DEFAULT default_datastore $TROVE_DATASTORE_TYPE
+    iniset $TROVE_CONF DEFAULT docker_insecure_registries ${TROVE_INSECURE_DOCKER_REGISTRIES}
 
     iniset $TROVE_CONF cache enabled true
     iniset $TROVE_CONF cache backend dogpile.cache.memory
@@ -255,6 +256,8 @@ function configure_trove {
     iniset $TROVE_CONF pxc tcp_ports 3306,4444,4567,4568
     iniset $TROVE_CONF redis tcp_ports 6379,16379
     iniset $TROVE_CONF vertica tcp_ports 5433,5434,5444,5450,4803
+    iniset $TROVE_CONF k2hdkc tcp_ports 8020,8021,8031
+    iniset $TROVE_CONF k2hdkc manager trove.guestagent.datastore.k2hdkc.manager.Manager
 
     ################################################################ trove guest agent conf
     setup_trove_logging $TROVE_GUESTAGENT_CONF
@@ -267,6 +270,9 @@ function configure_trove {
     iniset $TROVE_GUESTAGENT_CONF DEFAULT log_dir /var/log/trove/
     iniset $TROVE_GUESTAGENT_CONF DEFAULT log_file trove-guestagent.log
     iniset $TROVE_GUESTAGENT_CONF DEFAULT swift_api_insecure false
+    iniset $TROVE_GUESTAGENT_CONF DEFAULT network_isolation False
+    iniset $TROVE_GUESTAGENT_CONF DEFAULT docker_container_sysctls fs.mqueue.msg_max:136
+    iniset $TROVE_GUESTAGENT_CONF DEFAULT backup_swift_container k2hdkc_backups
 
     iniset $TROVE_GUESTAGENT_CONF service_credentials username trove
     iniset $TROVE_GUESTAGENT_CONF service_credentials user_domain_name Default
@@ -275,6 +281,7 @@ function configure_trove {
     iniset $TROVE_GUESTAGENT_CONF service_credentials project_name $SERVICE_PROJECT_NAME
     iniset $TROVE_GUESTAGENT_CONF service_credentials region_name $REGION_NAME
     iniset $TROVE_GUESTAGENT_CONF service_credentials auth_url $TROVE_AUTH_ENDPOINT
+    iniset $TROVE_GUESTAGENT_CONF service_credentials backup_aes_cbc_key "default_aes_cbc_key"
 
     iniset $TROVE_GUESTAGENT_CONF mysql docker_image ${TROVE_DATABASE_IMAGE_MYSQL}
     iniset $TROVE_GUESTAGENT_CONF mysql backup_docker_image ${TROVE_DATABASE_BACKUP_IMAGE_MYSQL}
@@ -282,6 +289,8 @@ function configure_trove {
     iniset $TROVE_GUESTAGENT_CONF mariadb backup_docker_image ${TROVE_DATABASE_BACKUP_IMAGE_MARIADB}
     iniset $TROVE_GUESTAGENT_CONF postgresql docker_image ${TROVE_DATABASE_IMAGE_POSTGRES}
     iniset $TROVE_GUESTAGENT_CONF postgresql backup_docker_image ${TROVE_DATABASE_BACKUP_IMAGE_POSTGRES}
+    iniset $TROVE_GUESTAGENT_CONF k2hdkc docker_image ${TROVE_DATABASE_IMAGE_K2HDKC}
+    iniset $TROVE_GUESTAGENT_CONF k2hdkc backup_docker_image ${TROVE_DATABASE_BACKUP_IMAGE_K2HDKC}
 
     # 1. To avoid 'Connection timed out' error of sudo command inside the guest agent
     # 2. Config the controller IP address used by guest-agent to download Trove code during initialization (only valid for dev_mode=true).
@@ -492,25 +501,39 @@ function create_guest_image {
       image create ${image_name} \
       --disk-format qcow2 --container-format bare \
       --tag trove \
+      --tag k2hdkc \
       --property hw_rng_model='virtio' \
       --file ${image_file} \
       --debug \
       -c id -f value)
      echo "Glance image ${glance_image_id} uploaded"
 
-    echo "Register the image in datastore"
-    $TROVE_MANAGE datastore_update $TROVE_DATASTORE_TYPE ""
-    $TROVE_MANAGE datastore_version_update $TROVE_DATASTORE_TYPE $TROVE_DATASTORE_VERSION $TROVE_DATASTORE_TYPE "" "" 1 --image-tags trove
-    $TROVE_MANAGE datastore_update $TROVE_DATASTORE_TYPE $TROVE_DATASTORE_VERSION
+    # Add k2hdkc datastore
+    #
+    # [NOTE]
+    # If you set TROVE_DATASTORE_TYPE and TROVE_DATASTORE_VERSION to k2hdkc:x.x.x as environment variables,
+    # it should be possible to configure it automatically with the above settings.
+    # Currently we keep set mysql as default, do not set these variables (the default is mysql) and register
+    # k2hdkc with the following process.
+    #
+    echo "Register the image in datastore for k2hdkc"
+
+    TROVE_DATASTORE_TYPE_K2HDKC="k2hdkc"
+    TROVE_DATASTORE_VERSION_K2HDKC="1.0.16"
+
+    $TROVE_MANAGE datastore_update ${TROVE_DATASTORE_TYPE_K2HDKC} ""
+    $TROVE_MANAGE datastore_version_update ${TROVE_DATASTORE_TYPE_K2HDKC} ${TROVE_DATASTORE_VERSION_K2HDKC} ${TROVE_DATASTORE_TYPE_K2HDKC} ${glance_image_id} ${TROVE_DATASTORE_TYPE_K2HDKC} 1 --image-tags trove,k2hdkc
+    $TROVE_MANAGE datastore_update ${TROVE_DATASTORE_TYPE_K2HDKC} ${TROVE_DATASTORE_VERSION_K2HDKC}
 
     echo "Add parameter validation rules if available"
-    if [[ -f $DEST/trove/trove/templates/$TROVE_DATASTORE_TYPE/validation-rules.json ]]; then
-        $TROVE_MANAGE db_load_datastore_config_parameters "$TROVE_DATASTORE_TYPE" "$TROVE_DATASTORE_VERSION" \
-            $DEST/trove/trove/templates/$TROVE_DATASTORE_TYPE/validation-rules.json
+    if [[ -f $DEST/trove/trove/templates/${TROVE_DATASTORE_TYPE_K2HDKC}/validation-rules.json ]]; then
+        $TROVE_MANAGE db_load_datastore_config_parameters "${TROVE_DATASTORE_TYPE_K2HDKC}" "${TROVE_DATASTORE_VERSION_K2HDKC}" \
+            $DEST/trove/trove/templates/${TROVE_DATASTORE_TYPE_K2HDKC}/validation-rules.json
     fi
+
     # NOTE(wuchunyang): Create log directory so that guest agent can rsync logs to this directory
     if [[ ${SYNC_LOG_TO_CONTROLLER} == "True" ]]; then
-    test -e /var/log/guest-agent-logs || sudo mkdir -p /var/log/guest-agent-logs/ && sudo chmod 777 /var/log/guest-agent-logs
+        test -e /var/log/guest-agent-logs || sudo mkdir -p /var/log/guest-agent-logs/ && sudo chmod 777 /var/log/guest-agent-logs
     fi
 }
 
@@ -660,10 +683,21 @@ function config_mgmt_security_group {
     echo "Creating Trove management security group."
     sgid=$(openstack --os-cloud trove security group create ${TROVE_MGMT_SECURITY_GROUP} -f value -c id)
 
+    # [NOTE]
+    # The security group has been registered, but for some reason a 500 response is returned.
+    # This may be due to a problem with another component, so we will bypass the error here.
+    #
     # Allow ICMP
-    openstack --os-cloud trove security group rule create --proto icmp $sgid
+    #
+    if ! openstack --os-cloud trove security group rule create --proto icmp $sgid; then
+        echo "Failed to add Security Group Rule for ICMP to ${TROVE_MGMT_SECURITY_GROUP}, but SKIP this error."
+    fi
+
     # Allow SSH
-    openstack --os-cloud trove security group rule create --protocol tcp --dst-port 22 $sgid
+    #
+    if ! openstack --os-cloud trove security group rule create --protocol tcp --dst-port 22 $sgid; then
+        echo "Failed to add Security Group Rule for SSH(22) to ${TROVE_MGMT_SECURITY_GROUP}, but SKIP this error."
+    fi
 
     iniset $TROVE_CONF DEFAULT management_security_groups $sgid
 }

#
# Local variables:
# tab-width: 4
# c-basic-offset: 4
# End:
# vim600: noexpandtab sw=4 ts=4 fdm=marker
# vim<600: noexpandtab sw=4 ts=4
#
